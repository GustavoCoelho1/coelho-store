import Head from 'next/head';
import { motion } from 'framer-motion';
import { ReactElement, useEffect, useState } from 'react';
import { ToastContainer, toast } from 'react-toastify';

import animate from '../animations';
import styles from '../styles/Login.module.scss';
import { myFadeIn, myFadeInUp } from '../animations/myAnimations';
import type { NextPageWithLayout } from './_app';
import { signIn, useSession } from 'next-auth/react';
import Link from 'next/link';
import Router from 'next/router';
import { useForm } from 'react-hook-form';

import {
    InputContainer,
    InputText,
    Label,
} from '../components/common/form/utils';

interface iLoginData {
    email: string;
    senha: string;
}

const Login: NextPageWithLayout = () => {
    const session = useSession();
    const [formSubmited, setFormSubmited] = useState(false);
    const { register, handleSubmit } = useForm<iLoginData>();

    const onSubmit = handleSubmit(async (data: iLoginData) => {
        const newToast = toast.loading('Por favor, aguarde...');

        const res = await signIn('credentials', {
            email: data.email,
            senha: data.senha,
            redirect: false,
        });

        if (res.ok) {
            toast.update(newToast, {
                render: 'Usuário logado com sucesso!',
                type: 'success',
                isLoading: false,
                autoClose: 2000,
            });
            setFormSubmited(true);
        } else {
            toast.update(newToast, {
                render: 'O usuário e/ou senha informados estão incorretos!',
                type: 'error',
                isLoading: false,
                autoClose: 3000,
            });
        }
    });

    useEffect(() => {
        if (formSubmited && session.status === 'authenticated') {
            const pageFrom = Router.query.from as string;

            const nextPath = pageFrom
                ? pageFrom
                : session.data.user.role === 'admin'
                ? '/admin/Pedidos'
                : '/';

            Router.push(nextPath);
        }
    }, [formSubmited, session]);

    return (
        <>
            <Head>
                <title>Login</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <motion.main
                className={styles.mainBlock}
                exit={{ opacity: 0 }}
                initial="initial"
                animate="animate"
                variants={animate.stagger(1)}
            >
                <motion.div
                    variants={myFadeIn}
                    className={styles.presentationBlock}
                >
                    <motion.div
                        variants={animate.stagger(0.2)}
                        className={styles.presentationInner}
                    >
                        <motion.h1
                            variants={myFadeInUp}
                            className={styles.titulo}
                        >
                            Coelho Store
                        </motion.h1>

                        <motion.span
                            variants={myFadeInUp}
                            className={styles.subtitulo}
                        >
                            Faça login para continuar
                        </motion.span>
                    </motion.div>
                </motion.div>

                <motion.form
                    variants={myFadeIn}
                    className={styles.formBlock}
                    onSubmit={onSubmit}
                >
                    <motion.div
                        variants={animate.stagger(0.2)}
                        className={styles.form}
                    >
                        <div className={styles.inputsBlock}>
                            <InputContainer
                                variants={myFadeInUp}
                                $size={12}
                                $mb={'mb-8'}
                            >
                                <Label>E-mail</Label>
                                <InputText
                                    {...register('email')}
                                    type="email"
                                    placeholder="E-mail"
                                />
                            </InputContainer>

                            <InputContainer
                                variants={myFadeInUp}
                                $size={12}
                                $mb={'mb-8'}
                            >
                                <Label>Senha</Label>
                                <InputText
                                    {...register('senha')}
                                    type="password"
                                    placeholder="Senha"
                                />
                            </InputContainer>
                        </div>

                        <motion.button
                            variants={myFadeInUp}
                            className={styles.btnSubmit}
                            type="submit"
                        >
                            Login
                        </motion.button>

                        <motion.span
                            variants={myFadeInUp}
                            className={styles.signMessage}
                        >
                            Ainda não possui uma conta?{' '}
                            <Link href="/Cadastro">
                                <span className="cursor-pointer text-violet-600">
                                    Cadastre-se
                                </span>
                            </Link>
                        </motion.span>
                    </motion.div>
                </motion.form>

                <ToastContainer
                    position="bottom-right"
                    autoClose={5000}
                    hideProgressBar={false}
                    newestOnTop={false}
                    closeOnClick
                    rtl={false}
                    pauseOnFocusLoss
                    draggable
                    pauseOnHover
                    theme="light"
                />
            </motion.main>
        </>
    );
};

Login.getLayout = (page: ReactElement) => page;

export default Login;
