import { useRef, useState, useEffect } from 'react';
import { motion } from 'framer-motion';
import { BiLogOut, BiUser } from 'react-icons/bi';
import { BsCartCheck, BsGear, BsHeart } from 'react-icons/bs';
import LoadingPage from 'components/common/ui/LoadingPage';
import Head from 'next/head';
import { signOut, useSession } from 'next-auth/react';
import { Divider } from 'components/common/form/utils';
import MyOrder from 'components/usuario/MyOrder';
import { gql, useQuery } from '@apollo/client';
import { domainToASCII } from 'url';
import { iCliente } from 'types/Cliente';
import Modal from 'components/common/ui/Modal';

const USUARIO_CLIENTE_POR_ID = gql`
    query ($id: ID!) {
        USUARIO_CLIENTE_POR_ID: clienteByUserId(id: $id) {
            cli_cod
        }
    }
`;

const Usuario = () => {
    const {
        data: { user },
    } = useSession();
    const [client, setClient] = useState<iCliente>();

    const { data } = useQuery(USUARIO_CLIENTE_POR_ID, {
        variables: { id: user.id },
    });

    const [modalVisible, setModalVisible] = useState(false);
    const [modalContent, setModalContent] = useState<JSX.Element>();

    const inputFile = useRef<HTMLInputElement>();
    const handleFileChange = (e) => {};

    useEffect(() => {
        if (data) {
            const cliente = data.USUARIO_CLIENTE_POR_ID as iCliente;

            setClient(cliente);
        }
    }, [data]);

    const handleMyOrderClick = () => {
        // setModalVisible(true);
        // setModalContent(<MyOrder client={client} />);
    };

    return (
        <>
            <Head>
                <title>Coelh√£o Store</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <motion.main
                exit={{ opacity: 0 }}
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ duration: 0.3 }}
                className="flex min-h-screen w-full items-start justify-center bg-violet-200 sm:py-10"
            >
                <div className="flex h-screen w-full max-w-[700px] flex-col items-center bg-white p-10 sm:h-auto sm:rounded-3xl">
                    <div className="flex w-full flex-col items-center">
                        <span className="text-xl font-bold text-violet-900">
                            {user.name}
                        </span>

                        <div
                            className={`my-4 flex min-w-max items-center justify-center overflow-hidden rounded-full border-2 bg-violet-600 text-white shadow-md shadow-violet-400`}
                        >
                            <label
                                htmlFor="img"
                                className="origin-center cursor-pointer p-10 text-center text-4xl"
                            >
                                <BiUser />
                            </label>
                            <input
                                onChange={(e) => handleFileChange(e)}
                                ref={inputFile}
                                id="img"
                                type="file"
                                className="hidden"
                            />
                        </div>
                    </div>
                    <div className="flex w-full flex-col items-center">
                        <button className="flex w-full items-center justify-center rounded-xl bg-white px-10 py-6 text-lg text-violet-600">
                            <span className="flex items-center">
                                <BsGear className="mr-3" />
                                <span>Meus dados</span>
                            </span>
                        </button>
                        <Divider $margin="my-1" $size="w-10/12" />
                        <button
                            onClick={() => handleMyOrderClick()}
                            className="flex w-full items-center justify-center rounded-xl bg-white px-10 py-6 text-lg text-violet-600"
                        >
                            <span className="flex items-center">
                                <BsCartCheck className="mr-3" />
                                <span>Meus pedidos</span>
                            </span>
                        </button>
                        <Divider $margin="my-1" $size="w-10/12" />
                        <button className="flex w-full items-center justify-center rounded-xl bg-white px-10 py-6 text-lg text-violet-600">
                            <span className="flex items-center">
                                <BsHeart className="mr-3" />
                                <span>Favoritos</span>
                            </span>
                        </button>
                        <Divider $margin="my-1" $size="w-10/12" />
                        <button
                            onClick={() => signOut()}
                            className="flex w-full items-center justify-center rounded-xl bg-white px-10 py-6 text-lg text-violet-600"
                        >
                            <span className="flex items-center">
                                <BiLogOut className="mr-3" />
                                <span>Sair</span>
                            </span>
                        </button>
                    </div>
                </div>

                <Modal
                    handleClose={() => setModalVisible(false)}
                    show={modalVisible}
                >
                    {modalContent}
                </Modal>
            </motion.main>
        </>
    );
};

Usuario.auth = {
    role: 'user',
    loading: <LoadingPage />,
    unauthorized: '/Login',
};

export default Usuario;
