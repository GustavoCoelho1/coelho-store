import { motion } from 'framer-motion';
import LoadingPage from 'components/common/ui/LoadingPage';
import Table from 'components/common/ui/DataTable';
import Card from 'components/common/ui/Card';

import { BiAddToQueue, BiArrowBack, BiEdit } from 'react-icons/bi';
import { MdRemoveCircleOutline } from 'react-icons/md';

import Head from 'next/head';
import ActionButton from 'components/common/ui/ActionButton';
import IcontTitle from 'components/common/ui/IconTitle';
import { FiShoppingBag, FiClock } from 'react-icons/fi';
import { MdManageAccounts } from 'react-icons/md';
import { NextPage } from 'next';
import Router from 'next/router';
import { useEffect, useState } from 'react';
import GQLClient from 'libs/apollo';
import { gql } from '@apollo/client';
import { iPedido } from 'types/Pedido';
import DeletarMarcaForm from 'components/admin/Marca/DeletarMarca';
import DeletarPedidoForm from 'components/admin/Pedidos/DeletarPedido';
import Modal from 'components/common/ui/Modal';
import { UTCtoDate } from 'utils';

const TODOS_PEDIDOS = gql`
    query {
        TODOS_PEDIDOS: allPedidos {
            ped_cod
            ped_data
            ped_status
            ped_valortotal
            cliente {
                cli_nome
            }
        }
    }
`;

const columns = [
    { field: 'id', headerName: 'ID', width: 150 },
    { field: 'data', headerName: 'Data', width: 100 },
    { field: 'status', headerName: 'Status', width: 100 },
    { field: 'cliente', headerName: 'Cliente', width: 150 },
    { field: 'vtotal', headerName: 'V. Total', width: 150 },
];

interface AuthProps {
    auth: {
        role: string;
        loading: JSX.Element;
        unauthorized: string;
    };
}

const Pedidos: NextPage & AuthProps = () => {
    const [tableData, setTableData] = useState<any[]>([{ id: '', nome: '' }]);
    const [updateTable, setUpdateTable] = useState(false);
    const [modalVisible, setModalVisible] = useState(false);
    const [modalContent, setModalContent] = useState<JSX.Element>();

    const handleAddClick = () => {
        Router.push('/admin/Pedidos/AddPedido');
    };

    const handleDelClick = () => {
        setModalContent(
            <DeletarPedidoForm
                setUpdate={setUpdateTable}
                setVisible={setModalVisible}
            />,
        );
        setModalVisible(true);
    };

    const updateTableData = async () => {
        const { data: pedData } = await GQLClient.query({
            query: TODOS_PEDIDOS,
        }).finally(() => {
            GQLClient.clearStore();
        }); //Limpando o cache para forçar uma nova requisição

        const pedidos = pedData?.TODOS_PEDIDOS;

        if (pedidos) {
            const pedidosSerialized = pedidos.map((pedido: iPedido) => {
                const data = UTCtoDate(pedido.ped_data.toString());

                return {
                    id: pedido.ped_cod,
                    status: pedido.ped_status,
                    cliente: pedido.cliente.cli_nome,
                    vtotal: pedido.ped_valortotal.toFixed(2),
                    data,
                };
            });

            return pedidosSerialized;
        }
    };

    useEffect(() => setUpdateTable(true), []);

    useEffect(() => {
        if (updateTable === true) {
            updateTableData().then((newRows) => {
                setTableData(newRows);
                setUpdateTable(false);
            });
        }
    }, [updateTable]);

    return (
        <>
            <Head>
                <title>Admin Dashboard</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <motion.div
                exit={{ opacity: 0 }}
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ duration: 0.3 }}
                className="flex w-full justify-center bg-violet-100 sm:py-10"
            >
                <Card width="w-10/12 justify-start">
                    <div className="flex w-full flex-col items-center">
                        <span className="my-4 flex items-center text-3xl text-violet-600 sm:mb-0 sm:mt-2">
                            <FiShoppingBag className="mr-3" />
                            <span>Pedidos</span>
                        </span>

                        <div className="my-8 h-0.5 w-4/6 rounded-xl bg-violet-200" />

                        <div>
                            <IcontTitle
                                icon={<MdManageAccounts />}
                                title="Gerenciamento"
                            />

                            <div className="mt-6 flex">
                                {/* <div
                                    onClick={() => handleAddClick()}
                                    className="mx-4 sm:mx-8"
                                >
                                    <ActionButton
                                        icon={<BiAddToQueue />}
                                        title={'Adicionar'}
                                    />
                                </div> */}
                                <div className="mx-4 sm:mx-8">
                                    <ActionButton
                                        icon={<BiEdit />}
                                        title={'Alterar'}
                                    />
                                </div>
                                <div
                                    onClick={() => handleDelClick()}
                                    className="mx-4 sm:mx-8"
                                >
                                    <ActionButton
                                        icon={<MdRemoveCircleOutline />}
                                        title={'Remover'}
                                    />
                                </div>
                            </div>
                        </div>

                        <div className="my-8 h-0.5 w-4/6 rounded-xl bg-violet-200" />

                        <div className="flex w-11/12 flex-col items-center">
                            <IcontTitle
                                icon={<FiClock />}
                                title={'Últimos pedidos'}
                            />
                            <Table columns={columns} rows={tableData} />
                        </div>
                    </div>
                </Card>

                <Modal
                    show={modalVisible}
                    handleClose={() => setModalVisible(false)}
                >
                    {modalContent}
                </Modal>
            </motion.div>
        </>
    );
};

Pedidos.auth = {
    role: 'admin',
    loading: <LoadingPage />,
    unauthorized: '/Login',
};

export default Pedidos;
